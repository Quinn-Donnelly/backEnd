'use strict';
module.exports = (sequelize, DataTypes) => {
  var experiment = sequelize.define('experiment', {
    aid: DataTypes.INTEGER,
    acid: DataTypes.INTEGER,
    aeid: DataTypes.INTEGER,
    asid: DataTypes.INTEGER,
    assay_source_name: DataTypes.STRING,
    assay_source_long_name: DataTypes.STRING,
    assay_source_desc: DataTypes.TEXT,
    assay_name: DataTypes.STRING,
    assay_desc: DataTypes.TEXT,
    timepoint_hr: DataTypes.INTEGER,
    organism_id: DataTypes.INTEGER,
    organism: DataTypes.STRING,
    tissue: DataTypes.STRING,
    cell_format: DataTypes.STRING,
    cell_free_component_source: DataTypes.STRING,
    cell_short_name: DataTypes.STRING,
    cell_growth_mode: DataTypes.STRING,
    assay_footprint: DataTypes.STRING,
    assay_format_type: DataTypes.STRING,
    assay_format_type_sub: DataTypes.STRING,
    content_readout_type: DataTypes.STRING,
    dilution_solvent: DataTypes.STRING,
    dilution_solvent_percent_max: DataTypes.FLOAT,
    assay_component_name: DataTypes.STRING,
    assay_component_desc: DataTypes.TEXT,
    assay_component_target_desc: DataTypes.TEXT,
    parameter_readout_type: DataTypes.STRING,
    assay_design_type: DataTypes.STRING,
    assay_design_type_sub: DataTypes.STRING,
    biological_process_target: DataTypes.STRING,
    detection_technology_type: DataTypes.STRING,
    detection_technology_type_sub: DataTypes.STRING,
    detection_technology: DataTypes.STRING,
    signal_direction_type: DataTypes.STRING,
    key_assay_reagent_type: DataTypes.STRING,
    key_assay_reagent: DataTypes.STRING,
    technological_target_type: DataTypes.STRING,
    technological_target_type_sub: DataTypes.STRING,
    assay_component_endpoint_name: DataTypes.STRING,
    export_ready: DataTypes.INTEGER,
    internal_ready: DataTypes.INTEGER,
    assay_component_endpoint_desc: DataTypes.TEXT,
    assay_function_type: DataTypes.STRING,
    normalized_data_type: DataTypes.STRING,
    analysis_direction: DataTypes.STRING,
    burst_assay: DataTypes.INTEGER,
    key_positive_control: DataTypes.STRING,
    signal_direction: DataTypes.STRING,
    intended_target_type: DataTypes.STRING,
    intended_target_type_sub: DataTypes.STRING,
    intended_target_family: DataTypes.STRING,
    intended_target_family_sub: DataTypes.STRING,
    fit_all: DataTypes.INTEGER,
    reagent_arid: DataTypes.STRING,
    reagent_reagent_name_value: DataTypes.TEXT,
    reagent_reagent_name_value_type: DataTypes.TEXT,
    reagent_culture_or_assay: DataTypes.STRING
  }, {});
  experiment.associate = function(models) {
    // associations can be defined here
  };
  return experiment;
};
